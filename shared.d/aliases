#!/bin/sh

# make standard file manipulation commands verbose
alias mv='mv -v'
alias cp='cp -v'
alias rm='rm -v'
alias tac="tail -r "
alias .d="pushd "
alias .+="pushd "
alias .p="popd "
alias .-="popd "

export EMACS_EDITOR=/Applications/Emacs.app
alias estart="open $EMACS_EDITOR"
alias e="emacsclient -a $EMACS_EDITOR -c"
alias ec="emacsclient -a $EMACS_EDITOR -c"
alias er="emacsclient -a $EMACS_EDITOR -r"
alias en="emacsclient -a $EMACS_EDITOR -c -n"
alias ecn="emacsclient -a $EMACS_EDITOR -c -n"
alias ern="emacsclient -a $EMACS_EDITOR -r -n"
alias sumacs='sudo emacs -nw -Q'

alias by='bundle && yarn'

alias eject='diskutil eject'

export LSCMD=/bin/ls
export LS_OPTS='-FGh'
# system_type=`uname`
# if [ "$system_type" == "Darwin" ] ; then
#     export LS_OPTS="-GFh"
# else
#     export LS_OPTS="--color=auto -Fh"
# fi

alias ls="$LSCMD $LS_OPTS"
alias ll="$LSCMD -l $LS_OPTS"
alias lla="$LSCMD -lA $LS_OPTS"
alias LLA="$LSCMD -lA $LS_OPTS | more"
alias l1="$LSCMD -1 $LS_OPTS"
alias lm="$LSCMD -m $LS_OPTS"

# Show me the dotfiles, bruh
alias lld="find -s . -mindepth 1 -maxdepth 1 -type d -print0 | xargs -0 $LSCMD -AFhld $LS_OPTS; find -s . -mindepth 1 -maxdepth 1 \! -type d -print0 | xargs -0 $LSCMD -AFhl $LS_OPTS"

dir_count() {
  for d in ${@} ; do
    echo -n "  ${d}: "
    find ${d} -maxdepth 1 -type d | sed 1d | wc -l
  done
}
# a grepency, we love colour
# a grepency, we love colour
export GREPCMD=/usr/bin/grep
export GREP_OPTS='--ignore-case --exclude-dir .git --exclude-dir .idea'
alias grepc="$GREPCMD $GREP_OPTS"
alias grepcnr="$GREPCMD $GREP_OPTS --color=auto -nr"
alias gcnr="$GREPCMD $GREP_OPTS -nr"
alias fgrepc="$GREPCMD $GREP_OPTS --color=auto -F "
alias fgrepcnr="$GREPCMD $GREP_OPTS --color=auto -Fnr"
alias fgcnr="$GREPCMD $GREP_OPTS -Fnr"
alias egrepc="$GREPCMD $GREP_OPTS --color=auto -E"
alias egrepcnr="$GREPCMD $GREP_OPTS --color=auto -Enr"
alias egcnr="$GREPCMD $GREP_OPTS -Enr"

alias path\?='echo -e ${PATH//:/\\n}'
alias pathP='echo -e ${PATH//:/\\n}'
alias .now='date "+%T"'

alias ports='netstat -tulanp'
alias openip='lsof -Pnl +M' # open IP connections (4 or 6)
alias openip4='lsof -Pnl +M -i4' # open IPv4 connections
alias openip6='lsof -Pnl +M -i6' # open IPv6 connections

alias cpan='cpanm'

alias ping1='ping -c 1'
alias timestamp='date "+%Y-%m-%d-%H-%M-%S"'

alias rsyncx='rsync -avz --rexclude-from=$HOME/.rsync_excludes '
alias rsnx='rsync -avz --rexclude-from=$HOME/.rsync_excludes '

alias log_action='echo "$(date "+%FT%T"): "'
alias rmdstore='find . -name .DS_Store -print -delete'
alias ytdl='youtube-dl -f 18 -o "%(title)s-%(id)s.%(ext)s" -k -x --audio-format mp3 '

export XCOP='xargs bundle exec rubocop'
alias xcops=${XCOP}
alias xcopsa="${XCOP} -a"
alias xcopsaa="${XCOP} -A"

tree () {
    /bin/ls -AR | grep ':$' | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
}

# replace spaces in file names with underscores
function mv_unspace_filenames () {
  for f in $@ ; do
    mv "$f" "$(echo "$f" | tr -s " " "_")"
  done
}

# lowercase file names
function mv_lc_filenames () {
  for f in $@ ; do
    mv "$f" "$(echo "$f" | tr '[:upper:]' '[:lower:]')"
  done
}

# clean file name: lower case, no spaces, alphanumeric plus _-+. only
function mv_clean_filenames () {
  for f in $@ ; do
    mv "$f" "$(echo "$1" | ruby -pe '$_=chomp.strip.gsub(/[^[:alnum:]]+/,"_").downcase')"

  done
}

# find diff between backup and current files in pwd after a filtering operation
function diffbak () {
    for f in *.bak ; do
	    diff "${f%%.bak}" "$f"
    done
}

# push back original files in pwd after filtering operation
function restore () {
    for f in *.bak ; do
	    mv -v "$f" "${f%%.bak}"
    done
}

# rename old files in pwd with new extension
function mv_replace_ext () {
    for f in *.$1 ; do
	    mv "$f" "${f%%.$1}.$2"
    done
}

function psgrep() {
    ps auxww | grep -v grep | grep --color=auto -E "(^USER|$*)"
}


function dlog() {
    echo $(date "+%FT%T") "$PWD" ':' "$@" >> $HOME/.dev.log
}
