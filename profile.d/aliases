#!/bin/sh

# make standard file manipulation commands verbose
alias mv='mv -v'
alias cp='cp -v'
alias rm='rm -v'
alias tac="tail -r "
alias e='emacsclient'
alias ec='emacsclient -a "" -c -n'

alias eject='diskutil eject'

export LSCMD=$(which ls)
system_type=`uname`
if [ "$system_type" == "Darwin" ] ; then
    export LS_OPTS="-G"
    alias EMACS='open -a Emacs --args -g 200x70'
else
    export LS_OPTS="--color=auto"
    alias EMACS=emacs
fi
alias freenode='emacs -g 100x70 --title freenode --eval "(freenode)" &'
alias transadvice='emacs -g 100x70 --title transadvice --eval "(transadvice)" &'


alias ls="$LSCMD -AFGh $LS_OPTS"
alias ll="$LSCMD -AFGlh $LS_OPTS"
alias l1="$LSCMD -1h $LS_OPTS"
alias lm="$LSCMD -mh $LS_OPTS"

alias path='echo -e ${PATH//:/\\n}'
alias now='date "+%T"'

alias ports='netstat -tulanp'
alias openip='lsof -Pnl +M' # open IP connections (4 or 6)
alias openip4='lsof -Pnl +M -i4' # open IPv4 connections
alias openip6='lsof -Pnl +M -i6' # open IPv6 connections

alias cpan='echo use cpanm instead'

alias phplint='php -l'
alias phplintdir='for f in $(find . -name "*.php") ; do php -l "$f"; done'

alias ping1='ping -c 1'
alias timestamp='date "+%Y-%m-%d-%H-%M-%S"'

alias irc='ssh tamouse.org'
alias rs='rails server -b 0.0.0.0'

alias s3sync='s3cmd -r --rexclude-from=$HOME/.s3sync-excludes sync '

alias pgstart='pg_ctl -D /usr/local/var/postgres start'
alias pgup='pg_ctl -D /usr/local/var/postgres start'
alias pgstop='pg_ctl -D /usr/local/var/postgres stop'
alias pgdn='pg_ctl -D /usr/local/var/postgres stop'
alias pgstatus='pg_ctl -D /usr/local/var/postgres status'
alias pgst='pg_ctl -D /usr/local/var/postgres status'



function tree () {
    /bin/ls -AR | grep ':$' | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
}

# replace spaces in file names with underscores
function unspace_filename () {
    echo "$1" | tr --squeeze-repeats " " "_"
}

# lowercase file names
function lc_filename () {
    echo "$1" | tr '[:upper:]' '[:lower:]'
}

# clean file name: lower case, no spaces, alphanumeric plus _-+. only
function clean_filename () {
    echo "$1" | perl -p -e 'chomp;s/\s+/_/g;s/[^[:alnum:]_+\.-]*//g;lc;'
}

# find diff between backup and current files in pwd after a filtering operation
function diffbak () {
    for f in *.bak ; do
	diff "${f%%.bak}" "$f"
    done
}

# push back original files in pwd after filtering operation
function restore () {
    for f in *.bak ; do
	mv -v "$f" "${f%%.bak}"
    done
}

# rename old files in pwd with new extension
function rename_all () {
    for f in *.$1 ; do
	mv "$f" "${f%%.$1}.$2"
    done
}

function psgrep() {
    ps auxww | grep -v grep | grep --color=auto -E "(^USER|$*)"
}

alias clean_photos='for f in *; do chmod -x $f ; mv $f $(echo $f|tr "A-Z_" "a-z-"); done'
alias rsysnx='rsync -avz --rexclude-from=$HOME/.rsync_excludes '

alias log_action='echo "$(date "+%FT%T"): "'
function dl() {
    echo $(date "+%FT%T") "$PWD" ':' "$@" >> $HOME/.dev.log
}


function new_project() {
    git init "$1" && \
	pushd "$1" && \
	echo "$2" | tee README.txt | tee .git/description | pbcopy && \
	echo "/node_modules/" >> .gitignore && \
	hub create -d "$2" && \
	yarn init && \
	gacp initial
}


alias ytdl='youtube-dl -f 18 -o "%(title)s-%(id)s.%(ext)s" -k -x --audio-format mp3 '
